// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AssessorDeployed extends ethereum.Event {
  get params(): AssessorDeployed__Params {
    return new AssessorDeployed__Params(this);
  }
}

export class AssessorDeployed__Params {
  _event: AssessorDeployed;

  constructor(event: AssessorDeployed) {
    this._event = event;
  }

  get assessor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAmountForONE(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeployerInitialized extends ethereum.Event {
  get params(): DeployerInitialized__Params {
    return new DeployerInitialized__Params(this);
  }
}

export class DeployerInitialized__Params {
  _event: DeployerInitialized;

  constructor(event: DeployerInitialized) {
    this._event = event;
  }

  get root(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenAmountForONE(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get seniorActive(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class DeploymentCompleted extends ethereum.Event {
  get params(): DeploymentCompleted__Params {
    return new DeploymentCompleted__Params(this);
  }
}

export class DeploymentCompleted__Params {
  _event: DeploymentCompleted;

  constructor(event: DeploymentCompleted) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get juniorTranche(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get seniorTranche(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get distributor(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get assessor(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class DistributorDeployed extends ethereum.Event {
  get params(): DistributorDeployed__Params {
    return new DistributorDeployed__Params(this);
  }
}

export class DistributorDeployed__Params {
  _event: DistributorDeployed;

  constructor(event: DistributorDeployed) {
    this._event = event;
  }

  get distributor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get distributorType(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seniorPercentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get juniorPercentage(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class JuniorTrancheDeployed extends ethereum.Event {
  get params(): JuniorTrancheDeployed__Params {
    return new JuniorTrancheDeployed__Params(this);
  }
}

export class JuniorTrancheDeployed__Params {
  _event: JuniorTrancheDeployed;

  constructor(event: JuniorTrancheDeployed) {
    this._event = event;
  }

  get juniorTranche(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get juniorTokenName(): string {
    return this._event.parameters[1].value.toString();
  }

  get juniorTokenSymbol(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OperatorDeployed extends ethereum.Event {
  get params(): OperatorDeployed__Params {
    return new OperatorDeployed__Params(this);
  }
}

export class OperatorDeployed__Params {
  _event: OperatorDeployed;

  constructor(event: OperatorDeployed) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get juniorCeiling(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seniorCeiling(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get capitalFormation(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SeniorTrancheDeployed extends ethereum.Event {
  get params(): SeniorTrancheDeployed__Params {
    return new SeniorTrancheDeployed__Params(this);
  }
}

export class SeniorTrancheDeployed__Params {
  _event: SeniorTrancheDeployed;

  constructor(event: SeniorTrancheDeployed) {
    this._event = event;
  }

  get seniorTranche(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get seniorRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get seniorTokenName(): string {
    return this._event.parameters[2].value.toString();
  }

  get seniorTokenSymbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class SeniorTrancheInitialized extends ethereum.Event {
  get params(): SeniorTrancheInitialized__Params {
    return new SeniorTrancheInitialized__Params(this);
  }
}

export class SeniorTrancheInitialized__Params {
  _event: SeniorTrancheInitialized;

  constructor(event: SeniorTrancheInitialized) {
    this._event = event;
  }

  get seniorRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seniorTokenName(): string {
    return this._event.parameters[1].value.toString();
  }

  get seniorTokenSymbol(): string {
    return this._event.parameters[2].value.toString();
  }

  get seniorTrancheFab(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class LenderDeployer extends ethereum.SmartContract {
  static bind(address: Address): LenderDeployer {
    return new LenderDeployer("LenderDeployer", address);
  }

  assessor(): Address {
    let result = super.call("assessor", "assessor():(address)", []);

    return result[0].toAddress();
  }

  try_assessor(): ethereum.CallResult<Address> {
    let result = super.tryCall("assessor", "assessor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  assessorFab(): Address {
    let result = super.call("assessorFab", "assessorFab():(address)", []);

    return result[0].toAddress();
  }

  try_assessorFab(): ethereum.CallResult<Address> {
    let result = super.tryCall("assessorFab", "assessorFab():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  convertToRatePerSecond(percentagePerYear: BigInt): BigInt {
    let result = super.call(
      "convertToRatePerSecond",
      "convertToRatePerSecond(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(percentagePerYear)],
    );

    return result[0].toBigInt();
  }

  try_convertToRatePerSecond(
    percentagePerYear: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "convertToRatePerSecond",
      "convertToRatePerSecond(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(percentagePerYear)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currency(): Address {
    let result = super.call("currency", "currency():(address)", []);

    return result[0].toAddress();
  }

  try_currency(): ethereum.CallResult<Address> {
    let result = super.tryCall("currency", "currency():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  distributor(): Address {
    let result = super.call("distributor", "distributor():(address)", []);

    return result[0].toAddress();
  }

  try_distributor(): ethereum.CallResult<Address> {
    let result = super.tryCall("distributor", "distributor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  distributorFab(): Address {
    let result = super.call("distributorFab", "distributorFab():(address)", []);

    return result[0].toAddress();
  }

  try_distributorFab(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributorFab",
      "distributorFab():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isSeniorTrancheInitialized(): boolean {
    let result = super.call(
      "isSeniorTrancheInitialized",
      "isSeniorTrancheInitialized():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_isSeniorTrancheInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSeniorTrancheInitialized",
      "isSeniorTrancheInitialized():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  juniorTokenName(): string {
    let result = super.call(
      "juniorTokenName",
      "juniorTokenName():(string)",
      [],
    );

    return result[0].toString();
  }

  try_juniorTokenName(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "juniorTokenName",
      "juniorTokenName():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  juniorTokenSymbol(): string {
    let result = super.call(
      "juniorTokenSymbol",
      "juniorTokenSymbol():(string)",
      [],
    );

    return result[0].toString();
  }

  try_juniorTokenSymbol(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "juniorTokenSymbol",
      "juniorTokenSymbol():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  juniorTranche(): Address {
    let result = super.call("juniorTranche", "juniorTranche():(address)", []);

    return result[0].toAddress();
  }

  try_juniorTranche(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "juniorTranche",
      "juniorTranche():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  juniorTrancheFab(): Address {
    let result = super.call(
      "juniorTrancheFab",
      "juniorTrancheFab():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_juniorTrancheFab(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "juniorTrancheFab",
      "juniorTrancheFab():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  operatorFab(): Address {
    let result = super.call("operatorFab", "operatorFab():(address)", []);

    return result[0].toAddress();
  }

  try_operatorFab(): ethereum.CallResult<Address> {
    let result = super.tryCall("operatorFab", "operatorFab():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  qiroFactory(): Address {
    let result = super.call("qiroFactory", "qiroFactory():(address)", []);

    return result[0].toAddress();
  }

  try_qiroFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("qiroFactory", "qiroFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  root(): Address {
    let result = super.call("root", "root():(address)", []);

    return result[0].toAddress();
  }

  try_root(): ethereum.CallResult<Address> {
    let result = super.tryCall("root", "root():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  seniorActive(): boolean {
    let result = super.call("seniorActive", "seniorActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_seniorActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("seniorActive", "seniorActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  seniorRate(): BigInt {
    let result = super.call("seniorRate", "seniorRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_seniorRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("seniorRate", "seniorRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  seniorTokenName(): string {
    let result = super.call(
      "seniorTokenName",
      "seniorTokenName():(string)",
      [],
    );

    return result[0].toString();
  }

  try_seniorTokenName(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "seniorTokenName",
      "seniorTokenName():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  seniorTokenSymbol(): string {
    let result = super.call(
      "seniorTokenSymbol",
      "seniorTokenSymbol():(string)",
      [],
    );

    return result[0].toString();
  }

  try_seniorTokenSymbol(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "seniorTokenSymbol",
      "seniorTokenSymbol():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  seniorTranche(): Address {
    let result = super.call("seniorTranche", "seniorTranche():(address)", []);

    return result[0].toAddress();
  }

  try_seniorTranche(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "seniorTranche",
      "seniorTranche():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  seniorTrancheFab(): Address {
    let result = super.call(
      "seniorTrancheFab",
      "seniorTrancheFab():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_seniorTrancheFab(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "seniorTrancheFab",
      "seniorTrancheFab():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenAmountForONE(): BigInt {
    let result = super.call(
      "tokenAmountForONE",
      "tokenAmountForONE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_tokenAmountForONE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenAmountForONE",
      "tokenAmountForONE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get root_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get currency_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenAmountForONE_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get juniorTokenName_(): string {
    return this._call.inputValues[3].value.toString();
  }

  get juniorTokenSymbol_(): string {
    return this._call.inputValues[4].value.toString();
  }

  get juniorTrancheFab_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get assessorFab_(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get operatorFab_(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get distributorFab_(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get seniorActive_(): boolean {
    return this._call.inputValues[9].value.toBoolean();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }
}

export class DeployAssessorCall extends ethereum.Call {
  get inputs(): DeployAssessorCall__Inputs {
    return new DeployAssessorCall__Inputs(this);
  }

  get outputs(): DeployAssessorCall__Outputs {
    return new DeployAssessorCall__Outputs(this);
  }
}

export class DeployAssessorCall__Inputs {
  _call: DeployAssessorCall;

  constructor(call: DeployAssessorCall) {
    this._call = call;
  }
}

export class DeployAssessorCall__Outputs {
  _call: DeployAssessorCall;

  constructor(call: DeployAssessorCall) {
    this._call = call;
  }
}

export class DeployDistributorCall extends ethereum.Call {
  get inputs(): DeployDistributorCall__Inputs {
    return new DeployDistributorCall__Inputs(this);
  }

  get outputs(): DeployDistributorCall__Outputs {
    return new DeployDistributorCall__Outputs(this);
  }
}

export class DeployDistributorCall__Inputs {
  _call: DeployDistributorCall;

  constructor(call: DeployDistributorCall) {
    this._call = call;
  }

  get distributorType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get seniorPercentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get juniorPercentage(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DeployDistributorCall__Outputs {
  _call: DeployDistributorCall;

  constructor(call: DeployDistributorCall) {
    this._call = call;
  }
}

export class DeployJuniorTrancheCall extends ethereum.Call {
  get inputs(): DeployJuniorTrancheCall__Inputs {
    return new DeployJuniorTrancheCall__Inputs(this);
  }

  get outputs(): DeployJuniorTrancheCall__Outputs {
    return new DeployJuniorTrancheCall__Outputs(this);
  }
}

export class DeployJuniorTrancheCall__Inputs {
  _call: DeployJuniorTrancheCall;

  constructor(call: DeployJuniorTrancheCall) {
    this._call = call;
  }
}

export class DeployJuniorTrancheCall__Outputs {
  _call: DeployJuniorTrancheCall;

  constructor(call: DeployJuniorTrancheCall) {
    this._call = call;
  }
}

export class DeployOperatorCall extends ethereum.Call {
  get inputs(): DeployOperatorCall__Inputs {
    return new DeployOperatorCall__Inputs(this);
  }

  get outputs(): DeployOperatorCall__Outputs {
    return new DeployOperatorCall__Outputs(this);
  }
}

export class DeployOperatorCall__Inputs {
  _call: DeployOperatorCall;

  constructor(call: DeployOperatorCall) {
    this._call = call;
  }

  get juniorCeiling(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get seniorCeiling(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get capitalFormation(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DeployOperatorCall__Outputs {
  _call: DeployOperatorCall;

  constructor(call: DeployOperatorCall) {
    this._call = call;
  }
}

export class DeploySeniorTrancheCall extends ethereum.Call {
  get inputs(): DeploySeniorTrancheCall__Inputs {
    return new DeploySeniorTrancheCall__Inputs(this);
  }

  get outputs(): DeploySeniorTrancheCall__Outputs {
    return new DeploySeniorTrancheCall__Outputs(this);
  }
}

export class DeploySeniorTrancheCall__Inputs {
  _call: DeploySeniorTrancheCall;

  constructor(call: DeploySeniorTrancheCall) {
    this._call = call;
  }
}

export class DeploySeniorTrancheCall__Outputs {
  _call: DeploySeniorTrancheCall;

  constructor(call: DeploySeniorTrancheCall) {
    this._call = call;
  }
}

export class InitSeniorCall extends ethereum.Call {
  get inputs(): InitSeniorCall__Inputs {
    return new InitSeniorCall__Inputs(this);
  }

  get outputs(): InitSeniorCall__Outputs {
    return new InitSeniorCall__Outputs(this);
  }
}

export class InitSeniorCall__Inputs {
  _call: InitSeniorCall;

  constructor(call: InitSeniorCall) {
    this._call = call;
  }

  get seniorRate_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get seniorTokenName_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get seniorTokenSymbol_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get seniorTrancheFab_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitSeniorCall__Outputs {
  _call: InitSeniorCall;

  constructor(call: InitSeniorCall) {
    this._call = call;
  }
}
